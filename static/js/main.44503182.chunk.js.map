{"version":3,"sources":["components/todoform.js","components/todolist.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","_ref","addTodo","text","setText","useState","React","createElement","onSubmit","e","preventDefault","trim","type","value","onChange","target","placeholder","TodoList","todos","deleteTodo","map","todo","key","id","onClick","App","setTodos","className","Date","now","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"iLAkBeA,MAjBEC,IAAkB,IAAjB,QAAEC,GAASD,EAC7B,MAAOE,EAAMC,GAAWC,mBAAS,IAQjC,OACAC,IAAAC,cAAA,QAAMC,SARgBC,IACtBA,EAAEC,iBACkB,KAAhBP,EAAKQ,SACTT,EAAQC,GACRC,EAAQ,OAKRE,IAAAC,cAAA,SAAOK,KAAK,OAAOC,MAAOV,EAAMW,SAAWL,GAAML,EAAQK,EAAEM,OAAOF,OAAQG,YAAY,sBAEtFV,IAAAC,cAAA,UAAQK,KAAK,UAAS,cCDPK,MAZEhB,IAA4B,IAA3B,MAAEiB,EAAK,WAAEC,GAAYlB,EACvC,OACAK,IAAAC,cAAA,UACCW,EAAME,IAAKC,GACZf,IAAAC,cAAA,MAAIe,IAAKD,EAAKE,IACbF,EAAKlB,KACNG,IAAAC,cAAA,UAAQiB,QAASA,IAAML,EAAWE,EAAKE,KAAK,cCY7BE,MAhBf,WACA,MAAOP,EAAOQ,GAAYrB,mBAAS,IAOnC,OACAC,IAAAC,cAAA,OAAKoB,UAAU,OACfrB,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAACP,EAAQ,CAACE,QATOC,IACjBuB,EAAS,IAAIR,EAAO,CAAEK,GAAIK,KAAKC,MAAO1B,aAStCG,IAAAC,cAACU,EAAQ,CAACC,MAAOA,EAAOC,WAPJI,IACpBG,EAASR,EAAMY,OAAQT,GAASA,EAAKE,KAAOA,SCG7BQ,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKjC,IAAkD,IAAjD,OAAEkC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAStC,EACpEkC,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtC,IAAAC,cAACD,IAAMuC,WAAU,KACfvC,IAAAC,cAACkB,EAAG,QAORM,K","file":"static/js/main.44503182.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nconst TodoForm = ({ addTodo }) => {\r\nconst [text, setText] = useState('');\r\nconst handleSubmit = (e) => {\r\ne.preventDefault();\r\nif (text.trim() !== '') {\r\naddTodo(text);\r\nsetText('');\r\n}\r\n};\r\nreturn (\r\n<form onSubmit={handleSubmit}>\r\n<input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Add a\r\nnew todo\" />\r\n<button type=\"submit\">Add Todo</button>\r\n</form>\r\n);\r\n};\r\nexport default TodoForm;\r\n","import React from 'react';\r\nconst TodoList = ({ todos, deleteTodo }) => {\r\nreturn (\r\n<ul>\r\n{todos.map((todo) => (\r\n<li key={todo.id}>\r\n{todo.text}\r\n<button onClick={() => deleteTodo(todo.id)}>Delete</button>\r\n</li>\r\n))}\r\n</ul>\r\n);\r\n};\r\nexport default TodoList;\r\n","import React, { useState } from 'react';\nimport TodoForm from './components/todoform';\nimport TodoList from './components/todolist';\nfunction App() {\nconst [todos, setTodos] = useState([]);\nconst addTodo = (text) => {\nsetTodos([...todos, { id: Date.now(), text }]);\n};\nconst deleteTodo = (id) => {\nsetTodos(todos.filter((todo) => todo.id !== id));\n};\nreturn (\n<div className=\"App\">\n<h1>TODO App</h1>\n<TodoForm addTodo={addTodo} />\n<TodoList todos={todos} deleteTodo={deleteTodo} />\n</div>\n);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}